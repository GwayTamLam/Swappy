@page "/users/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@inject HttpInterceptorService _interceptor
@implements IDisposable


<h3>Users</h3>

<a href="/users/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New User

</a>
<br />
<br />

@if (Users == null)
{
    <div class="alert alert-info">Loading Users...</div>
}
else
{
    <table class="table table-reponsive" id="usersTable">
        <thead>
            <tr>
                <th>Profile Picture</th>
                <th>Name</th>
                <th>Username</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Bio</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users)
            {
                <tr>
                    <td>
                        @if (user.ProfilePicture != null)
                        {
                            <img src="@($"data:image/jpeg;base64,{Convert.ToBase64String(user.ProfilePicture)}")" alt="Product Picture" />
                        }
                        else
                        {
                            <img src="https://static.thenounproject.com/png/354384-200.png" style="width:100px;height:100px"/>
                        }

                    </td>
                    <td>@user.Name</td>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.PhoneNumber</td>
                    <td>@user.Bio</td>

                    <td>
                        <a href="/users/view/@user.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/users/edit/@user.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(user.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<User>? Users;

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Users = await _client.GetFromJsonAsync<List<User>>($"{Endpoints.UsersEndpoint}");
    }

    async Task Delete(int userId)
    {
        if (Users != null)
        {
            var user = Users.First(q => q.Id == userId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {user.Name}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.UsersEndpoint}/{userId}");
                await OnInitializedAsync();
            }
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#usersTable");
    }

    public void Dispose()
    {
        _interceptor.DisposeEvent();
        js.InvokeVoidAsync("DataTablesDispose", "#usersTable");
    }

}
