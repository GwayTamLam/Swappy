@page "/orders/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<PageTitle>Orders</PageTitle>

<h1>Orders</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (Orders == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>CartId</th>
                <th>UserId</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Orders)
            {
                <tr>
                    <td>@order.CartID</td>
                    <td>@order.UserID</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Order>? Orders;

    protected async override Task OnInitializedAsync()
    {
        Orders = await _client.GetFromJsonAsync<List<Order>>($"{Endpoints.OrdersEndpoint}");
    }

    async Task Delete(int categoryId)
    {
        if (Orders != null)
        {
            var order = Orders.First(q => q.Id == categoryId);
            var confirm = await js.InvokeAsync<bool>("Confirm", $"Do you want to delete {order.Id}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.CategoriesEndpoint}/{categoryId}");
                await OnInitializedAsync();
            }
        }
    }
}
