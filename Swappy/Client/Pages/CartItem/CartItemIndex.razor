@page "/cartitems/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3>Cart</h3>

<a href="/cartitems/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Cart Item

</a>
<br />
<br />

@if (CartItems == null)
{
    <div class="alert alert-info">Loading Cart Items...</div>
}
else
{
    <table class="table table-reponsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Picture</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cartitem in CartItems)
            {
                <tr>
                    <td>@cartitem.Product.Name</td>
                    <td>@cartitem.Product.ProductPicture</td>
                    <td>@cartitem.Product.Price</td>
                    <td>@cartitem.Product.Quantity</td>

                    <td>
                        <a href="/colours/view/@cartitem.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/colours/edit/@cartitem.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(cartitem.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CartItem>? CartItems;

    protected async override Task OnInitializedAsync()
    {
        CartItems = await _client.GetFromJsonAsync<List<CartItem>>($"{Endpoints.CartItemsEndpoint}");
    }

    async Task Delete(int cartitemId)
    {
        if (CartItems != null)
        {
            var cartitem = CartItems.First(q => q.Id == cartitemId );
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {cartitem.Product.Name}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.CartItemsEndpoint}/{cartitemId}");
                await OnInitializedAsync();
            }
        }
    }

}
