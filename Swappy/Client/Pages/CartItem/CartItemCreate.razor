@page "/cartitems/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3>Create new cart items</h3>
<br />

<EditForm Model="@cartitem" OnValidSubmit="CreateCartItem">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Product: </label>
        <div>
            <InputSelect @bind-Value="cartitem.ProductID" class="form-control">
                <option value="">-- Select Product --</option>
                @if (Products != null)
                {
                    foreach (var product in Products)
                    {
                        <option value="@product.Id">@product.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => cartitem.ProductID)" />
        </div>
    </div>

    <div class="form-group">
        <label>User: </label>
        <div>
            <InputSelect @bind-Value="cartitem.UserId" class="form-control">
                <option value="">-- Select User --</option>
                @if (Users != null)
                {
                    foreach (var user in Users)
                    {
                        <option value="@user.Id">@user.UserName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => cartitem.UserId)" />
        </div>
    </div>
    


    <button type="submit" class="btn btn-success btn-block">
        Create Cart Item
    </button>

</EditForm>

@code {
    CartItem cartitem = new CartItem();
    private IList<Product>? Products;
    private IList<User>? Users;

    protected async override Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<User>>($"{Endpoints.UsersEndpoint}");
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
    }

    private async Task CreateCartItem()
    {
        await _client.PostAsJsonAsync(Endpoints.CartItemsEndpoint, cartitem);
        _navManager.NavigateTo("/cartitems/");
    }
}
